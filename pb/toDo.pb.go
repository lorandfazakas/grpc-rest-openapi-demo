// Code generated by protoc-gen-go. DO NOT EDIT.
// source: toDo.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ToDo_ToDoUrgency int32

const (
	ToDo_low      ToDo_ToDoUrgency = 0
	ToDo_normal   ToDo_ToDoUrgency = 1
	ToDo_critical ToDo_ToDoUrgency = 2
)

var ToDo_ToDoUrgency_name = map[int32]string{
	0: "low",
	1: "normal",
	2: "critical",
}

var ToDo_ToDoUrgency_value = map[string]int32{
	"low":      0,
	"normal":   1,
	"critical": 2,
}

func (x ToDo_ToDoUrgency) String() string {
	return proto.EnumName(ToDo_ToDoUrgency_name, int32(x))
}

func (ToDo_ToDoUrgency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d3d55f06c17e5d, []int{0, 0}
}

type ToDo struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Urgency              ToDo_ToDoUrgency `protobuf:"varint,4,opt,name=urgency,proto3,enum=pb.ToDo_ToDoUrgency" json:"urgency,omitempty"`
	IsDone               bool             `protobuf:"varint,5,opt,name=isDone,proto3" json:"isDone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ToDo) Reset()         { *m = ToDo{} }
func (m *ToDo) String() string { return proto.CompactTextString(m) }
func (*ToDo) ProtoMessage()    {}
func (*ToDo) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d3d55f06c17e5d, []int{0}
}

func (m *ToDo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToDo.Unmarshal(m, b)
}
func (m *ToDo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToDo.Marshal(b, m, deterministic)
}
func (m *ToDo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToDo.Merge(m, src)
}
func (m *ToDo) XXX_Size() int {
	return xxx_messageInfo_ToDo.Size(m)
}
func (m *ToDo) XXX_DiscardUnknown() {
	xxx_messageInfo_ToDo.DiscardUnknown(m)
}

var xxx_messageInfo_ToDo proto.InternalMessageInfo

func (m *ToDo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ToDo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ToDo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToDo) GetUrgency() ToDo_ToDoUrgency {
	if m != nil {
		return m.Urgency
	}
	return ToDo_low
}

func (m *ToDo) GetIsDone() bool {
	if m != nil {
		return m.IsDone
	}
	return false
}

type ToDos struct {
	ToDo                 []*ToDo  `protobuf:"bytes,1,rep,name=toDo,proto3" json:"toDo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToDos) Reset()         { *m = ToDos{} }
func (m *ToDos) String() string { return proto.CompactTextString(m) }
func (*ToDos) ProtoMessage()    {}
func (*ToDos) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d3d55f06c17e5d, []int{1}
}

func (m *ToDos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToDos.Unmarshal(m, b)
}
func (m *ToDos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToDos.Marshal(b, m, deterministic)
}
func (m *ToDos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToDos.Merge(m, src)
}
func (m *ToDos) XXX_Size() int {
	return xxx_messageInfo_ToDos.Size(m)
}
func (m *ToDos) XXX_DiscardUnknown() {
	xxx_messageInfo_ToDos.DiscardUnknown(m)
}

var xxx_messageInfo_ToDos proto.InternalMessageInfo

func (m *ToDos) GetToDo() []*ToDo {
	if m != nil {
		return m.ToDo
	}
	return nil
}

type ID struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d3d55f06c17e5d, []int{2}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d3d55f06c17e5d, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("pb.ToDo_ToDoUrgency", ToDo_ToDoUrgency_name, ToDo_ToDoUrgency_value)
	proto.RegisterType((*ToDo)(nil), "pb.ToDo")
	proto.RegisterType((*ToDos)(nil), "pb.ToDos")
	proto.RegisterType((*ID)(nil), "pb.ID")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
}

func init() {
	proto.RegisterFile("toDo.proto", fileDescriptor_38d3d55f06c17e5d)
}

var fileDescriptor_38d3d55f06c17e5d = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6e, 0xd3, 0x30,
	0x18, 0xc7, 0x71, 0xba, 0x76, 0xed, 0x57, 0x28, 0x95, 0x29, 0x53, 0x88, 0x26, 0x11, 0x59, 0x42,
	0xaa, 0x2a, 0x9a, 0x6c, 0xe5, 0x80, 0xd4, 0x5d, 0xb6, 0x11, 0x86, 0x2a, 0x71, 0x2a, 0x70, 0x45,
	0x72, 0x13, 0x2f, 0x35, 0xa4, 0xb6, 0x65, 0x7b, 0x1b, 0x05, 0xed, 0x82, 0xc4, 0x0b, 0xc0, 0x43,
	0x70, 0xe0, 0x45, 0xb8, 0xf3, 0x0a, 0x3c, 0x08, 0x8a, 0xb3, 0x8e, 0x96, 0x71, 0x89, 0xe5, 0xcf,
	0xbf, 0xdf, 0xf7, 0x77, 0x6c, 0x03, 0x58, 0x99, 0xc8, 0x48, 0x69, 0x69, 0x25, 0xf6, 0xd4, 0x2c,
	0xd8, 0xcd, 0xa5, 0xcc, 0x0b, 0x16, 0x53, 0xc5, 0x63, 0x2a, 0x84, 0xb4, 0xd4, 0x72, 0x29, 0x4c,
	0x45, 0x04, 0x8f, 0xdd, 0x90, 0x0e, 0x73, 0x26, 0x86, 0xe6, 0x82, 0xe6, 0x39, 0xd3, 0xb1, 0x54,
	0x8e, 0xb8, 0x49, 0x93, 0x9f, 0x08, 0xb6, 0x5e, 0xcb, 0x44, 0xe2, 0x0e, 0x78, 0x3c, 0xf3, 0x51,
	0x88, 0xfa, 0xf5, 0xa9, 0xc7, 0x33, 0xdc, 0x83, 0xba, 0xe5, 0xb6, 0x60, 0xbe, 0x17, 0xa2, 0x7e,
	0x6b, 0x5a, 0x4d, 0x70, 0x08, 0xed, 0x8c, 0x99, 0x54, 0x73, 0xd7, 0xd0, 0xaf, 0xb9, 0xb5, 0xf5,
	0x12, 0x8e, 0x60, 0xfb, 0x4c, 0xe7, 0x4c, 0xa4, 0x4b, 0x7f, 0x2b, 0x44, 0xfd, 0xce, 0xa8, 0x17,
	0xa9, 0x59, 0x54, 0x46, 0xb8, 0xcf, 0x9b, 0x6a, 0x6d, 0xba, 0x82, 0xf0, 0x0e, 0x34, 0xb8, 0x49,
	0xa4, 0x60, 0x7e, 0x3d, 0x44, 0xfd, 0xe6, 0xf4, 0x6a, 0x46, 0xf6, 0xa0, 0xbd, 0xc6, 0xe3, 0x6d,
	0xa8, 0x15, 0xf2, 0xa2, 0x7b, 0x0b, 0x03, 0x34, 0x84, 0xd4, 0x0b, 0x5a, 0x74, 0x11, 0xbe, 0x0d,
	0xcd, 0x54, 0x73, 0xcb, 0x53, 0x5a, 0x74, 0x3d, 0xf2, 0x08, 0xea, 0xa5, 0x61, 0xf0, 0x2e, 0x6c,
	0x95, 0x27, 0xe6, 0xa3, 0xb0, 0xd6, 0x6f, 0x8f, 0x9a, 0xab, 0xfc, 0xa9, 0xab, 0x92, 0x1e, 0x78,
	0x93, 0xe4, 0xdf, 0xdf, 0x25, 0xdb, 0x50, 0x7f, 0xbe, 0x50, 0x76, 0x39, 0xfa, 0xe2, 0x55, 0xc1,
	0xaf, 0x98, 0x3e, 0xe7, 0x29, 0xc3, 0x63, 0x68, 0xbf, 0x60, 0xf6, 0xa8, 0x28, 0xaa, 0xde, 0xad,
	0xb2, 0x9b, 0x23, 0x83, 0xd6, 0xaa, 0xb1, 0x21, 0xf7, 0x3f, 0xff, 0xfa, 0xfd, 0xcd, 0xbb, 0x8b,
	0xef, 0xb8, 0x3b, 0x39, 0xdf, 0x8f, 0xad, 0xcc, 0xa4, 0xc1, 0x07, 0xce, 0x2d, 0x91, 0xe3, 0xe5,
	0x24, 0xc1, 0x8d, 0x52, 0x98, 0x24, 0xc1, 0xf5, 0x8e, 0x48, 0xe0, 0xbc, 0x1e, 0xc6, 0x1b, 0x5e,
	0xfc, 0x89, 0x67, 0x97, 0xf8, 0x00, 0xe0, 0x99, 0x66, 0xd4, 0x32, 0x77, 0x3d, 0xd7, 0x4e, 0xf0,
	0x77, 0x07, 0xc4, 0x77, 0x3a, 0x26, 0x9b, 0xb1, 0x63, 0x34, 0xc0, 0x87, 0x00, 0x27, 0x5c, 0x70,
	0x33, 0x77, 0xf2, 0x2a, 0x78, 0x4d, 0x7d, 0xe8, 0xd4, 0x07, 0xa4, 0xb7, 0x99, 0x7c, 0xea, 0xa4,
	0x31, 0x1a, 0x1c, 0xff, 0x40, 0x5f, 0x8f, 0xbe, 0x23, 0x7c, 0x09, 0x3b, 0xb9, 0x56, 0xe9, 0x50,
	0x33, 0x63, 0x87, 0x52, 0x31, 0x41, 0x15, 0x1f, 0x66, 0x6c, 0x21, 0xc9, 0x5b, 0xe8, 0xbc, 0x94,
	0x9a, 0x8a, 0x2c, 0x3c, 0xa1, 0x1f, 0xe9, 0x7b, 0x6a, 0xf0, 0xd3, 0xb9, 0xb5, 0xca, 0x8c, 0xe3,
	0x38, 0xe7, 0x76, 0x7e, 0x36, 0x8b, 0x52, 0xb9, 0x88, 0x0b, 0x87, 0x9c, 0x56, 0x44, 0xfc, 0xff,
	0x56, 0xc1, 0x3d, 0xf6, 0x81, 0x2e, 0x54, 0xc1, 0x0e, 0xaf, 0xc6, 0xd2, 0x1c, 0xd5, 0xf6, 0xa3,
	0xbd, 0x81, 0x87, 0xbc, 0x51, 0x97, 0x2a, 0x55, 0xf0, 0xd4, 0x3d, 0xdb, 0xf8, 0x9d, 0x91, 0x62,
	0x7c, 0xa3, 0x32, 0x6b, 0xb8, 0xd7, 0xfc, 0xe4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x06,
	0x0c, 0xfa, 0x2b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ToDoServiceClient is the client API for ToDoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToDoServiceClient interface {
	// Get all the ToDos
	GetAllToDos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ToDos, error)
	// Get ToDo by ID
	GetToDoByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*ToDo, error)
	// Create a ToDo
	CreateToDo(ctx context.Context, in *ToDo, opts ...grpc.CallOption) (*Empty, error)
	// Mark as Done
	FinishToDo(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Empty, error)
}

type toDoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewToDoServiceClient(cc grpc.ClientConnInterface) ToDoServiceClient {
	return &toDoServiceClient{cc}
}

func (c *toDoServiceClient) GetAllToDos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ToDos, error) {
	out := new(ToDos)
	err := c.cc.Invoke(ctx, "/pb.ToDoService/GetAllToDos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) GetToDoByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*ToDo, error) {
	out := new(ToDo)
	err := c.cc.Invoke(ctx, "/pb.ToDoService/GetToDoByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) CreateToDo(ctx context.Context, in *ToDo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.ToDoService/CreateToDo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) FinishToDo(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.ToDoService/FinishToDo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToDoServiceServer is the server API for ToDoService service.
type ToDoServiceServer interface {
	// Get all the ToDos
	GetAllToDos(context.Context, *Empty) (*ToDos, error)
	// Get ToDo by ID
	GetToDoByID(context.Context, *ID) (*ToDo, error)
	// Create a ToDo
	CreateToDo(context.Context, *ToDo) (*Empty, error)
	// Mark as Done
	FinishToDo(context.Context, *ID) (*Empty, error)
}

// UnimplementedToDoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedToDoServiceServer struct {
}

func (*UnimplementedToDoServiceServer) GetAllToDos(ctx context.Context, req *Empty) (*ToDos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllToDos not implemented")
}
func (*UnimplementedToDoServiceServer) GetToDoByID(ctx context.Context, req *ID) (*ToDo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToDoByID not implemented")
}
func (*UnimplementedToDoServiceServer) CreateToDo(ctx context.Context, req *ToDo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateToDo not implemented")
}
func (*UnimplementedToDoServiceServer) FinishToDo(ctx context.Context, req *ID) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinishToDo not implemented")
}

func RegisterToDoServiceServer(s *grpc.Server, srv ToDoServiceServer) {
	s.RegisterService(&_ToDoService_serviceDesc, srv)
}

func _ToDoService_GetAllToDos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).GetAllToDos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ToDoService/GetAllToDos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).GetAllToDos(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_GetToDoByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).GetToDoByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ToDoService/GetToDoByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).GetToDoByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_CreateToDo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToDo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).CreateToDo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ToDoService/CreateToDo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).CreateToDo(ctx, req.(*ToDo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_FinishToDo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).FinishToDo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ToDoService/FinishToDo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).FinishToDo(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToDoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ToDoService",
	HandlerType: (*ToDoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllToDos",
			Handler:    _ToDoService_GetAllToDos_Handler,
		},
		{
			MethodName: "GetToDoByID",
			Handler:    _ToDoService_GetToDoByID_Handler,
		},
		{
			MethodName: "CreateToDo",
			Handler:    _ToDoService_CreateToDo_Handler,
		},
		{
			MethodName: "FinishToDo",
			Handler:    _ToDoService_FinishToDo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "toDo.proto",
}
